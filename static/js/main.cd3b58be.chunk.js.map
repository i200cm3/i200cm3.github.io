{"version":3,"sources":["images/background.jpg","images/OT/label.png","images/FunnyCook/IMlogo568h.png","images/OT/Display.png","images/FunnyCook/Rightbuttionpush.png","images/FunnyCook/Leftbuttionpush.png","images/FunnyCook/ButtionA.png","images/FunnyCook/ButtionB.png","images/OT/Diver1.png","images/OT/Diver2.png","images/OT/Diver3.png","images/OT/Diver4.png","images/OT/Diverboat1.png","images/OT/Diverboat2.png","images/OT/Diverboat3.png","images/OT/Diverboat1hand1.png","images/OT/Diverboat1hand2.png","images/OT/Diver5.png","images/OT/Diver5hand1.png","images/OT/Diver5hand2.png","images/OT/Diver5hand3.png","images/OT/Treasure1.png","images/OT/Treasure2.png","images/OT/Treasure3.png","images/OT/Treasure4.png","images/OT/Treasure5.png","images/OT/Deaddiverhand1.png","images/OT/Deaddiverhand2.png","images/OT/Deaddiverhand3.png","images/OT/Deaddiverhead.png","images/OT/Deaddiverleg1.png","images/OT/Deaddiverleg2.png","images/OT/Deaddiverleg3.png","images/OT/Deaddiverleg4.png","images/OT/Gamea.png","images/OT/Gameb.png","images/OT/Tentacle00.png","images/OT/Tentacle11.png","images/OT/Tentacle12.png","images/OT/Tentacle13.png","images/OT/Tentacle14.png","images/OT/Tentacle15.png","images/OT/Tentacle16.png","images/OT/Tentacle21.png","images/OT/Tentacle22.png","images/OT/Tentacle23.png","images/OT/Tentacle24.png","images/OT/Tentacle25.png","images/OT/Tentacle31.png","images/OT/Tentacle32.png","images/OT/Tentacle33.png","images/OT/Tentacle34.png","images/OT/Tentacle41.png","images/OT/Tentacle42.png","images/OT/Tentacle43.png","images/OT/pp.png","images/OT/dp.png","components/OT/Time_.js","Sound/sound 3.mp3","Sound/sound 5.mp3","Sound/sound 4.mp3","Sound/sound 1.mp3","components/Ot.js","images/FunnyCook/label.png","images/FunnyCook/Displyay.png","images/FunnyCook/Cooker4.png","images/FunnyCook/Cooker3.png","images/FunnyCook/Cooker2.png","images/FunnyCook/Cooker1.png","images/FunnyCook/MouseThhidden.png","images/FunnyCook/MouseThmeat.png","images/FunnyCook/MouseThsosige.png","images/FunnyCook/MouseThfish.png","images/FunnyCook/MouseThchicken.png","images/FunnyCook/Catfork.png","components/FunnyCook.js","components/Main.js","images/background_1280x800_s.jpg","images/background_1280x800_a.jpg","images/background_1280x800_j.jpg","images/background_1980x1080_s.jpg","images/background_1980x1080_a.jpg","images/background_1980x1080_j.jpg","App.tsx","helpers/css/portalcss.ts","reportWebVitals.ts","index.tsx"],"names":["memo","UIfx","beep_error_mp3","beep_move_mp3","beep_score_mp3","beep_click","TweenOne","plugins","push","BezierPlugin","ThemeBackgroundEva","createGlobalStyle","darkEva","ThemeBackgroundSber","darkSber","ThemeBackgroundJoy","darkJoy","TypoScaleSberBox","sberBox","TypoScaleSberPortal","TypoScaleTouch","touch","beep","beepMp3","AppStyled","styled","div","body1","App","useState","character","setCharacter","setInsets","assistantStateRef","useRef","assistantRef","setCommand","setButtonLDown","setButtonRDown","setButtonEnterDown","game","setGame","React","time","setTime","timeRef","SetButtonFocus","gameFocus","setGameFocus","focusRef","gameRef","current","useCallback","action","sendData","console","log","command","undefined","inx","downHandler","event","code","keyCode","play","prevState","n","window","history","pushState","name","addEventListener","e","state","preventDefault","upHandler","useEffect","removeEventListener","getState","process","REACT_APP_TOKEN","createAssistant","on","JSON","stringify","type","insets","id","navigation","smart_app_data","timer","setInterval","prevTime","clearInterval","background_img","device","detectDevice","img_background_sber","img_background_ava","img_background_joy","img_background_portal_sber","img_background_portal_ava","img_background_portal_joy","width","innerWidth","height","innerHeight","background","style","position","top","left","color","zIndex","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd3b58be.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.141e76a8.jpg\";","export default __webpack_public_path__ + \"static/media/label.4762bfdb.png\";","export default __webpack_public_path__ + \"static/media/IMlogo568h.a141cf0b.png\";","export default __webpack_public_path__ + \"static/media/Display.a482cb0d.png\";","export default __webpack_public_path__ + \"static/media/Rightbuttionpush.dc62f488.png\";","export default __webpack_public_path__ + \"static/media/Leftbuttionpush.889918ea.png\";","export default __webpack_public_path__ + \"static/media/ButtionA.6adde35e.png\";","export default __webpack_public_path__ + \"static/media/ButtionB.0dfc6cec.png\";","export default __webpack_public_path__ + \"static/media/Diver1.3d068972.png\";","export default __webpack_public_path__ + \"static/media/Diver2.6bbfad3a.png\";","export default __webpack_public_path__ + \"static/media/Diver3.de176a7a.png\";","export default __webpack_public_path__ + \"static/media/Diver4.80335cf8.png\";","export default __webpack_public_path__ + \"static/media/Diverboat1.86287929.png\";","export default __webpack_public_path__ + \"static/media/Diverboat2.9b741b2f.png\";","export default __webpack_public_path__ + \"static/media/Diverboat3.b030652f.png\";","export default __webpack_public_path__ + \"static/media/Diverboat1hand1.2893b7d0.png\";","export default __webpack_public_path__ + \"static/media/Diverboat1hand2.c99ca5f3.png\";","export default __webpack_public_path__ + \"static/media/Diver5.513dd824.png\";","export default __webpack_public_path__ + \"static/media/Diver5hand1.333fc814.png\";","export default __webpack_public_path__ + \"static/media/Diver5hand2.7acb2a06.png\";","export default __webpack_public_path__ + \"static/media/Diver5hand3.2174f6bb.png\";","export default __webpack_public_path__ + \"static/media/Treasure1.5424550e.png\";","export default __webpack_public_path__ + \"static/media/Treasure2.46c42f22.png\";","export default __webpack_public_path__ + \"static/media/Treasure3.25662c90.png\";","export default __webpack_public_path__ + \"static/media/Treasure4.9f204913.png\";","export default __webpack_public_path__ + \"static/media/Treasure5.f7958718.png\";","export default __webpack_public_path__ + \"static/media/Deaddiverhand1.8038c8a0.png\";","export default __webpack_public_path__ + \"static/media/Deaddiverhand2.84f14796.png\";","export default __webpack_public_path__ + \"static/media/Deaddiverhand3.f3fc6762.png\";","export default __webpack_public_path__ + \"static/media/Deaddiverhead.1046c3a1.png\";","export default __webpack_public_path__ + \"static/media/Deaddiverleg1.fc3b5146.png\";","export default __webpack_public_path__ + \"static/media/Deaddiverleg2.5d12cd9c.png\";","export default __webpack_public_path__ + \"static/media/Deaddiverleg3.e3604853.png\";","export default __webpack_public_path__ + \"static/media/Deaddiverleg4.f9c57e3e.png\";","export default __webpack_public_path__ + \"static/media/Gamea.f5035b3c.png\";","export default __webpack_public_path__ + \"static/media/Gameb.09c28f04.png\";","export default __webpack_public_path__ + \"static/media/Tentacle00.fc13b45f.png\";","export default __webpack_public_path__ + \"static/media/Tentacle11.fd9c524e.png\";","export default __webpack_public_path__ + \"static/media/Tentacle12.90991647.png\";","export default __webpack_public_path__ + \"static/media/Tentacle13.100d7ffa.png\";","export default __webpack_public_path__ + \"static/media/Tentacle14.13576855.png\";","export default __webpack_public_path__ + \"static/media/Tentacle15.1c61049a.png\";","export default __webpack_public_path__ + \"static/media/Tentacle16.2c201c65.png\";","export default __webpack_public_path__ + \"static/media/Tentacle21.cf3093a9.png\";","export default __webpack_public_path__ + \"static/media/Tentacle22.61b1c0d6.png\";","export default __webpack_public_path__ + \"static/media/Tentacle23.2b09b17e.png\";","export default __webpack_public_path__ + \"static/media/Tentacle24.fa44eaa6.png\";","export default __webpack_public_path__ + \"static/media/Tentacle25.ef109bea.png\";","export default __webpack_public_path__ + \"static/media/Tentacle31.a4ac682b.png\";","export default __webpack_public_path__ + \"static/media/Tentacle32.40b04e93.png\";","export default __webpack_public_path__ + \"static/media/Tentacle33.938062dc.png\";","export default __webpack_public_path__ + \"static/media/Tentacle34.5bf257b1.png\";","export default __webpack_public_path__ + \"static/media/Tentacle41.5ee90e15.png\";","export default __webpack_public_path__ + \"static/media/Tentacle42.4aa10d2b.png\";","export default __webpack_public_path__ + \"static/media/Tentacle43.f25aabe7.png\";","export default __webpack_public_path__ + \"static/media/pp.932ec6ab.png\";","export default __webpack_public_path__ + \"static/media/dp.27528e70.png\";","\nimport React, {memo} from \"react\";\n\nimport '../../images/OT/styles.css'\nimport img_pp from \"../../images/OT/pp.png\";\nimport img_dp from \"../../images/OT/dp.png\";\n\n\nfunction TimeGameAB(props){\n\n\n    function splitToDigits(number) {\n        let digits = [];\n        while (number) {\n            digits.push(number % 10);\n            number = Math.floor(number/10);\n        }\n        return digits;\n    }\n\n    const digits_HH = splitToDigits(props.hh);\n    const digits_MM = splitToDigits(props.mm);\n\n\n    let style_h1 =   {position: \"absolute\", fontFamily: \"digital_7\", textAlign: \"right\", top: 320-20-3, left:640+350, color: \"black\", zIndex: 99999, fontSize: 100}\n    let style_h2 =   {position: \"absolute\", fontFamily: \"digital_7\", textAlign: \"right\", top: 320-20-3, left:690+350, color: \"black\", zIndex: 99999, fontSize: 100}\n\n    let style_m1 =   {position: \"absolute\", fontFamily: \"digital_7\", textAlign: \"right\", top: 320-20-3, left:750+350, color: \"black\", zIndex: 99999, fontSize: 100}\n    let style_m2 =   {position: \"absolute\", fontFamily: \"digital_7\", textAlign: \"right\", top: 320-20-3, left:800+350, color: \"black\", zIndex: 99999, fontSize: 100}\n\n\n    let style5 =   {position: \"absolute\", fontFamily: \"digital_7\", textAlign: \"right\", top: 320-20-3, left:720+350, color: \"black\", zIndex: 99999, fontSize: 100}\n\n    const h1 = digits_HH.length>1?digits_HH[1].toString():\"0\"\n    const h2 = digits_HH.length>0?digits_HH[0].toString():\"0\"\n\n    const m1 = digits_MM.length>1?digits_MM[1].toString():\"0\"\n    const m2 = digits_MM.length>0?digits_MM[0].toString():\"0\"\n\n\n    return (\n        <>\n            <div style={style_m1}> <div>{m1}</div></div>\n            <div style={style_m2}> <div>{m2}</div></div>\n\n            <div style={style_h1}> <div>{h1}</div></div>\n            <div style={style_h2}> <div>{h2}</div></div>\n\n            {props.sep && <div style={style5}> <div>:</div></div>}\n\n            {props.dp_pp && <div className=\"OT_dp\"><img src={img_dp} alt={\"1dp\"} /></div>}\n            {!props.dp_pp && <div className=\"OT_pp\"><img src={img_pp} alt={\"1pp\"} /></div>}\n\n\n\n        </>\n\n\n    )\n}\n\nexport default memo(TimeGameAB);","export default __webpack_public_path__ + \"static/media/sound 3.76799ea5.mp3\";","export default __webpack_public_path__ + \"static/media/sound 5.4c93a3d0.mp3\";","export default __webpack_public_path__ + \"static/media/sound 4.c342ec65.mp3\";","export default __webpack_public_path__ + \"static/media/sound 1.d686618e.mp3\";","// clear; for name in *; do printf 'import img_%s \\n' \"$name from \\\"../images/FunnyCook/$name\"; done\n\n\nimport React ,{useState, memo, useCallback, useRef} from \"react\";\n\nimport BackgroundGame from \"./OT/BackgroundGame\"\nimport Controls from \"./OT/Controls\"\nimport Player from \"./OT/Player\"\nimport Octopus from \"./OT/Octopus\"\nimport Vers from \"./Vers\"\n// import ErrorFood from \"./FunnyCook/ErrorFood\";\nimport Score from \"./OT/Score\";\n// import ErrorCount from \"./FunnyCook/ErrorCount\";\nimport Teaport from \"./OT/Teaport\";\nimport Time from \"./OT/Time_\"\n\nimport '../images/OT/styles.css'\n\n//import * as helper from \"../helpers/helper\";\n//import * as data from \"../images/FunnyCook/data\";\n\nimport UIfx from 'uifx'\n\nimport beep_error_mp3 from '../Sound/sound 3.mp3' // ошибка\nimport beep_move_mp3 from '../Sound/sound 5.mp3' // движение еды\nimport beep_score_mp3 from '../Sound/sound 4.mp3'\nimport beep_click from '../Sound/sound 1.mp3'\n\n\n\n\nconst beep_err = new UIfx(beep_error_mp3)\nconst beep_move = new UIfx(beep_move_mp3)\nconst beep_score = new UIfx(beep_score_mp3)\nconst clicksound = new UIfx(beep_click)\n\n\n\nfunction Оt(props){\n\n\n\n        const [command, setCommand] = useState(\"none\")\n        // const commandRef = useRef(command)\n        //\n        // commandRef.current = command;\n\n        const [demo, setDemo] = useState(true);\n        const [octopusCatch, setOctopusCatch] = useState(false)\n\n        const [heroPos, setHeroPos] = useState(0)\n\n        const [orderTentacle, setOrderTentacle] = useState([0,1,2,3,4]);\n        const [currrentTentacle, setCurrentTentacle] = useState(0);\n        const [onetwo, setOneTwo] = useState(false);\n\n        const [tentacle, setTentacle] =  useState([0, 0, 0, 0, 0]);\n\n        const [treasure, setTreasure] = useState(0)\n        const [treasureBoard, setTreasureBoard] = useState(0)\n\n        const [handAnim, setHandAnim] = useState(0)\n        const [deathAnim, setDeathAnim] = useState(0)\n\n\n\n        const countLButton  = useRef(0)\n        const countRButton = useRef(0)\n        const countEntrButton = useRef(0)\n\n\n        const buttonLDown = useRef(true)\n        const buttonRDown = useRef(true)\n        const buttonADown = useRef(false)\n        const buttonBDown = useRef(false)\n        const buttonTDown = useRef(false)\n\n\n        const [runner, setRunner] = useState(true)\n        const [start, setStart] = useState(true)\n\n\n\n        const [gameAB, setGameAB] = useState(0)\n\n        const [hh, setHh] = useState(0)\n        const [mm, setMm] = useState(0)\n        const [separator, setSeparator] = useState(false)\n        const [dp_pp, setDp_pp] = useState(true)\n\n\n        const [score, setScore] = useState(0)\n        const [resetError, setResetError] = useState(false)\n        const [addScore, setAddScore] = useState(0)\n\n\n\n        const [live, setLive] = useState(3)\n\n        const [lastPositionCook, setCook] = useState(props.posgame)\n\n\n\n        const [time, setTime] = React.useState(0);\n\n        const [dt, setDt] = React.useState(0.25);\n\n\n        const handAnimRef = useRef(handAnim)\n        const deathAnimRef = useRef(deathAnim)\n\n        const scoreRef = useRef(score)\n        const heroPosRef = useRef(heroPos)\n        const treasureRef = useRef(treasure)\n        const treasureBoardRef = useRef(treasureBoard)\n        const addScoreRef = useRef(addScore)\n        const dtRef = useRef(dt)\n\n        dtRef.current = dt\n\n        // if (!demo){\n        //         heroPosRef.current = props.posgame\n        // }\n\n\n        const sendEvent = props.callbackEvent;\n        function send_event(id, param) {\n                sendEvent({ \"action_id\": id, \"parameters\" : param } );\n        }\n\n        const nextTentacle = () => {\n\n\n                const  maxTentacle = [5, 7, 9, 7, 5]\n\n                let copytentacle  = JSON.parse(JSON.stringify(tentacle));\n\n                let currentT = currrentTentacle\n                let nTentacleforChange = orderTentacle[currentT]\n\n                let next = 1;\n\n\n\n                if ((nTentacleforChange === 0) && (!onetwo)) {\n                        //должна быть вторая, но текущая первая\n                        currentT = currentT + 1;\n                        nTentacleforChange = orderTentacle[currentT]\n                        // copytentacle[nTentacleforChange] += 1;\n                        next = 2;\n\n                        }\n                if ((nTentacleforChange === 0) && (onetwo)) {\n                        next = 2;\n\n                }\n\n                copytentacle[nTentacleforChange] += 1;\n\n\n                if (copytentacle[nTentacleforChange] > maxTentacle[nTentacleforChange])\n                {\n                        copytentacle[nTentacleforChange] = 0;\n                        if (nTentacleforChange<2){\n                                setOneTwo(prevState => !prevState)\n                        }\n                }\n\n                setCurrentTentacle(prevState => {\n\n                        let newstate = prevState + next;\n                        if (newstate>5) {\n\n                                newstate = 0\n                        }\n\n                        return newstate;\n\n                })\n\n                setTentacle(prevState => {\n\n                        return copytentacle\n                })\n\n\n\n\n        }\n\n        const moveR = () => {\n\n                setHeroPos( (prev) => {\n                        const max = 5;\n                        if (heroPosRef.current === max){\n                                treasureAdd()\n                        }\n                        const x = prev<max?1:0;\n                        heroPosRef.current = prev + x;\n                        return prev + x;\n\n                })\n\n        }\n        const moveL = () => {\n\n\n                if ((heroPosRef.current === 1) && (treasureRef.current > 0))\n                {\n                        setHeroPos(0)\n                        heroPosRef.current = 0;\n                        treasureBoardRef.current = 1;\n\n                }\n\n                setHeroPos( (prev) => {\n                        const x = prev>1?-1:0;\n                        heroPosRef.current = prev + x;\n                        return prev + x;\n                })\n\n        }\n        const moveDemo = () => {\n\n                const hero = heroPosRef.current\n\n                let flagR = true;\n                let flagL = true;\n                // лодка\n                if ((hero === 0) && (onetwo) && ((tentacle[0] === 3) || (tentacle[0] === 2))) flagR = false;\n                if ((hero === 1) && (!onetwo) && ((tentacle[1] === 4) || (tentacle[1] === 3))) flagR = false;\n                if ((hero === 2) && ((tentacle[2] === 5) || (tentacle[2] === 4))) flagR = false;\n                if ((hero === 3) && ((tentacle[3] === 4) || (tentacle[3] === 3))) flagR = false;\n                if ((hero === 4) && ((tentacle[4] === 3) || (tentacle[4] === 2))) flagR = false;\n\n\n                if ((hero === 1) && (treasureRef.current === 0)){\n                        flagL = false;\n                }\n                if ((hero === 2) && (onetwo) && ((tentacle[0] === 3) || (tentacle[0] === 2))) flagL = false;\n                if ((hero === 3) && (!onetwo) && ((tentacle[1] === 4) || (tentacle[1] === 3))) flagL = false;\n                if ((hero === 4) && ((tentacle[2] === 4) || (tentacle[2] === 5))) flagL = false;\n\n                // спасаюсь\n                if ((hero === 5) && (tentacle[4] === 2)){\n\n                        if (tentacle[3] !== 4 ) {\n                                flagL = true;\n                                flagR = false;\n                        }\n                }\n\n                if ((hero === 4) && (tentacle[hero -1] === 3)){\n\n\n\n                        if( !((tentacle[hero] === 2 ) || (tentacle[hero] === 3 )))  {\n\n\n                                flagL = false;\n                                flagR = true;\n                        }\n                        else\n                                if (!((tentacle[hero - 2] === 4 ) || (tentacle[hero - 2] === 5 ))) {\n                                        flagL = true;\n                                        flagR = false;\n                                }\n                }\n\n                if ((hero === 3) && (tentacle[hero -1] === 3)){\n\n\n\n                        if( !((tentacle[hero] === 3 ) || (tentacle[hero] === 4 )))  {\n\n\n                                flagL = false;\n                                flagR = true;\n                        }\n                        else\n                        if (!((tentacle[hero - 2] === 3 ) || (tentacle[hero - 2] === 4 ))) {\n                                flagL = true;\n                                flagR = false;\n                        }\n                }\n\n\n\n\n\n\n\n\n                if ((treasureRef.current > 0) && (hero === 1)) {\n                        moveL();\n                        return\n                }\n                if (flagR) {moveR(); return}\n                if (flagL) {moveL(); return}\n                // console.log(heroPosRef.current, tentacle)\n                //\n                //\n                // if (heroPosRef.current === 0) {\n                //         if ((onetwo) && (tentacle[0] === 3)) return;\n                //         moveR()\n                //         return;\n                // }\n                // if (heroPosRef.current === 1) {\n                //         if ((!onetwo) && (tentacle[1] === 5)) return;\n                //         moveR()\n                //         return;\n                // }\n                // if (heroPosRef.current === 2) {\n                //         if ((tentacle[2] === 7) || (tentacle[2] === 6)) {\n                //                 if ((tentacle[1] !== 5) && (!onetwo)) {\n                //                         moveL();\n                //                         return;\n                //                 }\n                //                 return;\n                //         }\n                //         moveR()\n                //         return;\n                // }\n                //\n                // if (heroPosRef.current === 3) {\n                //         if ((tentacle[3] === 5) || (tentacle[3] === 4)) {\n                //                 if (tentacle[2] !== 7)\n                //                 {\n                //                         moveL();\n                //                         return;\n                //                 }\n                //                 return;\n                //         }\n                //\n                //         moveR()\n                //         return;\n                // }\n                // if (heroPosRef.current === 4) {\n                //\n                //         if ((tentacle[4] === 3) || (tentacle[4] === 2)) {\n                //                 if (tentacle[3] !== 3){\n                //                         moveL();\n                //                         return;\n                //                 }\n                //                 return;\n                //         };\n                //         moveR()\n                //         return;\n                // }\n                // if (heroPosRef.current === 5) {\n                //         if (tentacle[4] === 2) {\n                //                 if (tentacle[3] !== 5) {\n                //                         moveL();\n                //                         return;\n                //                 }\n                //         };\n                //         moveR()\n                //         return;\n                // }\n\n        }\n\n        const clickGameA = () => {\n                setDt(0.25)\n                setScore(0)\n                // setErrorcount(0)\n\n                setRunner(true)\n                setDemo(false)\n\n                setGameAB('A');\n\n\n                deathAnimRef.current = 0\n                setDeathAnim(0)\n                setOctopusCatch(false)\n                setHeroPos(0)\n                heroPosRef.current = 0\n                setTentacle([0,0,0,0,0])\n\n                setTreasure(0)\n                treasureRef.current = 0;\n                setLive(3)\n                restart_game()\n\n        }\n        const clickGameB = () => {\n                setDt(0.25)\n                setScore(0)\n                setLive(3)\n\n                setRunner(true)\n\n\n                setDemo(false)\n                setGameAB('B');\n                deathAnimRef.current = 0\n                setDeathAnim(0)\n                setOctopusCatch(false)\n                setHeroPos(0)\n                heroPosRef.current = 0\n                setTentacle([0,0,0,0,0])\n\n                setTreasure(0)\n                setLive(3)\n                treasureRef.current = 0;\n                restart_game(true)\n\n        }\n        const clickGameTime = () => {\n                setScore(0)\n                setLive(3)\n                setRunner(true)\n\n\n                setDemo(true)\n                setGameAB('B');\n                restart_game(true)\n\n        }\n\n\n        const changeDt = () =>{\n\n\n                if (demo){\n                        setDt(0.1);\n                        return\n                }\n\n                let delay = dtRef.current;\n\n                if ((score + 1 ) % 10 === 0){\n                        send_event(\"myScoreEvent\", (score+1).toString())\n                }\n\n                if (score + 1 < 30) delay = 0.25;\n                if (score + 1 === 30) delay -= 0.02;\n                if (score + 1 === 40) delay -= 0.02;\n                if (score + 1 === 60) delay -= 0.02;\n                if (score + 1 === 80) delay -= 0.02; //\n\n                if (score + 1 === 200) {\n                        delay = 0.25;\n                        setRunner(false);\n                        setResetError(true);\n                        setTimeout(() => {\n\n\n                                setResetError(false);\n                                setRunner(true);\n                                setLive(3)\n\n                        }, 4000);\n                }\n                if (score + 1 === 220) delay -= 0.02;\n                if (score + 1 === 240) delay -= 0.02;\n                if (score + 1 === 260) delay -= 0.02;\n\n\n                if (score + 1 === 500) delay = 0.2;\n                if (score + 1 === 520) delay -= 0.02;\n                if (score + 1 === 540) delay -= 0.02;\n                if (score + 1 === 560) delay -= 0.02;\n\n\n\n                setDt(delay)\n        }\n\n        const restart_game = (gameB = false) => {\n\n\n\n                if (gameB === true) {\n                        // setChiken(1)\n                }else{\n                        // setChiken(0)\n                }\n\n\n                setStart(true)\n\n        }\n\n        const treasureAdd = () =>{\n\n\n\n                if (handAnimRef.current === 0){\n\n                        setHandAnim(1)\n                        handAnimRef.current = 1;\n                }\n\n\n        }\n\n        const callbackL = React.useCallback(() => {\n\n                clicksound.play()\n                if (demo) return;\n                if (!runner) return;\n\n\n                if ((heroPosRef.current === 1) && (treasureRef.current > 0))\n                {\n                        setHeroPos(0)\n                        heroPosRef.current = 0;\n                        treasureBoardRef.current = 1;\n                }\n                setHeroPos( (prev) => {\n                        const x = prev>1?-1:0;\n                        heroPosRef.current = prev + x;\n                        return prev + x;\n                })\n                checkError()\n        }, [])\n\n        const callbackR = React.useCallback(() => {\n                clicksound.play()\n                if (demo) return;\n                if (!runner) return;\n\n                setHeroPos( (prev) => {\n                        const max = 5;\n                        if (heroPosRef.current === max){\n                                treasureAdd()\n                        }\n                        const x = prev<max?1:0;\n                        heroPosRef.current = prev + x;\n                        return prev + x;\n\n                })\n                checkError()\n        }, [])\n\n        const cacth = () => {\n                setRunner(false)\n                setOctopusCatch(true)\n                setDeathAnim(1)\n                deathAnimRef.current = 1\n\n                if (live>1) {\n\n                        setTimeout(() => {\n\n                              if (!demo)  setLive(prevState => {\n                                        const n = prevState -1\n                                        return n\n                                })\n\n                                deathAnimRef.current = 0\n                                setDeathAnim(0)\n\n                                setRunner(true);\n\n                                setOctopusCatch(false)\n                                setHeroPos(0)\n                                heroPosRef.current = 0\n                                setTentacle([0,0,0,0,0])\n\n                                setTreasure(0)\n                                treasureRef.current = 0;\n\n                        }, 3000);\n                }\n\n\n\n        }\n        const checkError = () => {\n\n                let errortentacle = [4,4,5,4,3]\n                if ((heroPosRef.current === 0)) return\n\n\n                if ((heroPosRef.current === 1) && (!onetwo)) return\n                if ((heroPosRef.current === 2) && (onetwo)) return\n\n\n\n\n\n                if (onetwo){\n                        errortentacle = [3,4,5,4,3]\n\n                }\n\n\n                if ((heroPosRef.current === 1) && (onetwo) && tentacle[0] === 3 ){\n                        cacth()\n                        return;\n                }\n                if (tentacle[1] === 4)\n                {\n                        if ((heroPosRef.current === 2) && (!onetwo) && tentacle[1] === 4 ){\n                                cacth()\n                                return;\n                        }\n                }\n\n                if ((tentacle[heroPosRef.current - 1] === errortentacle[heroPosRef.current - 1])){\n\n                        cacth()\n                }\n\n\n\n\n        };\n\n        const checkButtonDown = (l, r, entr) => {\n\n                if  ((countEntrButton.current !== entr) && (entr === 0)){\n\n                        buttonADown.current = false;\n                        buttonBDown.current = false;\n                        buttonTDown.current = false;\n\n                        countEntrButton.current = 0\n\n                        if (props.buttonFocus === 0){\n\n                                clickGameA()\n\n                        }\n                        if (props.buttonFocus === 1){\n\n                                clickGameB()\n\n                        }\n                        if (props.buttonFocus === 2){\n\n                                clickGameTime()\n\n\n                        }\n\n\n\n                }\n\n                if  ((countLButton.current !== l) && (l === 0)){\n                        buttonLDown.current = false\n                        countLButton.current = 0\n                }\n                if  ((countRButton.current !== r) && (r === 0)){\n                        buttonRDown.current = false\n                        countRButton.current = 0\n                }\n\n                if ((entr > 0) && (entr !== countEntrButton.current)){\n                        countEntrButton.current = entr\n\n                        if (props.buttonFocus === 0){\n                                buttonADown.current = true;\n                                buttonBDown.current = false;\n                                buttonTDown.current = false;\n\n\n                        }\n                        if (props.buttonFocus === 1){\n                                buttonADown.current = false;\n                                buttonBDown.current = true;\n                                buttonTDown.current = false;\n\n\n                        }\n                        if (props.buttonFocus === 2){\n                                buttonADown.current = false;\n                                buttonBDown.current = false;\n                                buttonTDown.current = true;\n\n\n\n                        }\n\n\n                }\n                // else{\n                //         buttonADown.current = false;\n                //         buttonBDown.current = false;\n                //         buttonTDown.current = false;\n                // }\n\n                if ((l > 0) && (l !== countLButton.current)) {\n\n                        countLButton.current = l\n                        buttonLDown.current = true\n\n                        if (demo) return;\n                        if (!runner) return;\n\n                        if ((heroPosRef.current === 1) && (treasureRef.current > 0))\n                        {\n                                setHeroPos(0)\n                                heroPosRef.current = 0;\n                                treasureBoardRef.current = 1;\n                        }\n                        setHeroPos( (prev) => {\n                                const x = prev>1?-1:0;\n                                heroPosRef.current = prev + x;\n                                return prev + x;\n                        })\n                        checkError()\n\n\n\n\n                }\n\n                if ((r>0) && (r !== countRButton.current)) {\n\n                        countRButton.current = r\n                        buttonRDown.current = true\n                        if (demo) return;\n                        if (!runner) return;\n                        const max = 5;\n                        if (heroPosRef.current === max){\n                                treasureAdd()\n                        }\n                        setHeroPos( (prev) => {\n\n                                const x = prev<max?1:0;\n                                heroPosRef.current = prev + x;\n                                return prev + x;\n\n                        })\n                        checkError()\n                }\n\n\n        }\n\n        React.useEffect(() => {\n                const timer = window.setInterval(() => {\n\n                        setTime(prevTime => prevTime + 1); // <-- Change this line!\n\n                        checkButtonDown(props.buttonLDown, props.buttonRDown, props.buttonEnterDown )\n\n\n                        if (!runner){\n                                return\n                        }\n\n\n                         if (start){\n                                setTimeout(() => {\n                                        setStart(false)\n                                }, 2000);\n                         return;\n                         }\n\n                        const t = Math.floor(dt * 30 / 0.25);\n                        if (time % (t) === 0) {\n                                if (start){\n                                     setStart(false)\n                                }\n\n                                nextTentacle()\n                                checkError()\n\n                        }\n\n                        if (demo && Math.floor(time % 55) === 0)\n                        {\n                                 moveDemo()\n                        }\n\n                }, 10);\n                return () => {\n                        window.clearInterval(timer);\n                };\n        }, [time]);\n\n        React.useEffect(() => {\n                const timer = window.setInterval(() => {\n\n                        setSeparator(prevState => !prevState)\n                        const d = new Date();\n\n                        setDp_pp((d.getHours() < 12) ? true : false);\n                        setHh((d.getHours() < 12) ? d.getHours() : d.getHours() - 12);\n                        setMm(d.getMinutes());\n\n\n\n                }, 1000);\n                return () => {\n                        window.clearInterval(timer);\n                };\n        }, [separator]);\n\n        React.useEffect(() => {\n                const timer = window.setInterval(() => {\n\n\n                        if ((deathAnimRef.current > 0) && (octopusCatch)){\n                                setDeathAnim(prevState => {\n                                        let n = prevState + 1;\n                                        if (n>2) n = 1;\n\n                                        return n;\n                                })\n                                deathAnimRef.current = deathAnim;\n                        }\n\n\n                }, 400);\n                return () => {\n                        window.clearInterval(timer);\n                };\n        }, [deathAnim, octopusCatch]);\n\n        React.useEffect(() => {\n                const timer = window.setInterval(() => {\n\n                        if (heroPosRef.current !== 5 ) {\n                                handAnimRef.current = 0;\n                        }\n                        if ((handAnimRef.current >= 1) && (!octopusCatch)) {\n\n\n                                let flag = false\n                                setHandAnim(prevState => {\n                                            if   (prevState === 3)  {\n                                                    flag = true\n                                            }\n                                            const st = prevState > 3 ? 0 : prevState + 1;\n                                            return st;\n\n                                    }\n                                )\n                                handAnimRef.current = handAnim;\n\n                                if ((flag)){\n\n                                        setTreasure( prevState => {\n\n                                                treasureRef.current = prevState + 1;\n\n\n                                                return prevState + 1;}\n                                                )\n\n                                }\n\n                        }\n\n                        if ( treasureBoardRef.current >= 1){\n                                setTreasureBoard( prevState => {\n\n                                        const st = prevState > 6 ? 0 : prevState + 1;\n                                        treasureBoardRef.current = st;\n                                        return st;\n\n                                    }\n                                )\n                                if (treasureBoardRef.current === 1){\n\n                                        setAddScore(1)\n                                        addScoreRef.current = 1\n                                }\n\n                        }\n\n                }, 200);\n                return () => {\n                        window.clearInterval(timer);\n                };\n        }, [handAnim, treasure, octopusCatch]);\n\n        React.useEffect(() => {\n                const timer = window.setInterval(() => {\n\n                        if (addScoreRef.current>0) {\n                                if (treasureRef.current > 0) {\n\n\n                                                setScore(prevState => prevState + 1)\n                                                changeDt()\n\n\n\n                                        setTreasure(prevState => prevState - 1)\n                                        treasureRef.current = treasureRef.current  -1;\n                                }\n                                else\n                                {\n                                        addScoreRef.current = 0;\n\n                                }\n                        }\n\n\n\n\n                }, 150);\n                return () => {\n                        window.clearInterval(timer);\n                };\n        }, [addScore, score]);\n\n\n        if ((props.commandfromback === 'povar_gameA') && (command !== props.commandfromback)) {\n\n                setCommand(props.commandfromback)\n                clickGameA()\n        }\n\n        if ((props.commandfromback === 'povar_gameB') && (command !== props.commandfromback)) {\n\n                setCommand(props.commandfromback)\n                clickGameB()\n        }\n\n\n        const styles = {\n                transform: `scale( ${props.scale}, ${props.scale})`,\n                position: \"absolute\",\n        };\n        if (props.rotate === 90){\n                styles.top = `0px`;\n                styles.left =  `100%`;\n\n        }else\n        {\n                styles.top = `${props.top}px`;\n                styles.left = `${props.left}px`;\n        }\n\n\n\n\n\n        return (\n\n            <div style={styles}>\n                   <div style = {{transform: `rotate( ${props.rotate}deg )`}}>\n                           <BackgroundGame />\n                           {props.scale > 0.3 && <Controls callbackL = {callbackL}\n                                     callbackR = {callbackR}\n                                     buttonLDown = {buttonLDown.current}\n                                     buttonRDown = {buttonRDown.current}\n                                     callGameA = {clickGameA}\n                                     callGameB = {clickGameB}\n                                     callbackTime = {clickGameTime}\n\n                           />}\n                           <Player posgame = {heroPosRef.current}\n                                   start = {start}\n                                   hand = {handAnimRef.current}\n                                   treasureBoard = {treasureBoardRef.current}\n                                   bag = {treasureRef.current}\n                                   gameAB = {gameAB}\n                                   live = {live}\n                                   deathAnim = {deathAnim}\n                           />\n                           <Octopus arr_tentacle = {tentacle} start = {start}  octopusCatch = {octopusCatch}/>\n\n                           {/*<Food meat = {meat} sosige = {sosige} fish = {fish} chiken = {chiken}/>*/}\n                           {/*<ErrorFood pos = {errorfood} />*/}\n                            {!demo && <Score score = {score % 1000} />}\n                            {/*{!demo && <ErrorCount count = {errorcount} resetError = {resetError}/>}*/}\n\n\n                            {demo && <Time hh = {hh} mm = {mm} dp_pp = {dp_pp} sep = {separator}/>}\n\n\n                    </div>\n            </div>);\n};\n\nexport default memo(Оt);\n\n","export default __webpack_public_path__ + \"static/media/label.17cb7bca.png\";","export default __webpack_public_path__ + \"static/media/Displyay.46f69777.png\";","export default __webpack_public_path__ + \"static/media/Cooker4.66e4bfe1.png\";","export default __webpack_public_path__ + \"static/media/Cooker3.47524a2f.png\";","export default __webpack_public_path__ + \"static/media/Cooker2.34efd29c.png\";","export default __webpack_public_path__ + \"static/media/Cooker1.c9631af3.png\";","export default __webpack_public_path__ + \"static/media/MouseThhidden.6cfc7a06.png\";","export default __webpack_public_path__ + \"static/media/MouseThmeat.34a9beb4.png\";","export default __webpack_public_path__ + \"static/media/MouseThsosige.131bf339.png\";","export default __webpack_public_path__ + \"static/media/MouseThfish.caebb022.png\";","export default __webpack_public_path__ + \"static/media/MouseThchicken.e60aa073.png\";","export default __webpack_public_path__ + \"static/media/Catfork.d040bc83.png\";","// clear; for name in *; do printf 'import img_%s \\n' \"$name from \\\"../images/FunnyCook/$name\"; done\n\n\nimport React ,{useState, memo, useCallback, useRef} from \"react\";\nimport produce from \"immer\"\nimport BackgroundGame from \"./FunnyCook/BackgroundGame\"\nimport Controls from \"./FunnyCook/Controls\"\nimport Player from \"./FunnyCook/Player\"\nimport Food from \"./FunnyCook/Food\"\nimport Vers from \"./Vers\"\nimport ErrorFood from \"./FunnyCook/ErrorFood\";\nimport Score from \"./FunnyCook/Score\";\nimport ErrorCount from \"./FunnyCook/ErrorCount\";\nimport Teaport from \"./FunnyCook/Teaport\";\nimport Time from \"./FunnyCook/Time_\"\nimport Cat from \"./FunnyCook/Cat\"\nimport '../images/FunnyCook/funnyCook.css'\n\n\n\n\nimport UIfx from 'uifx'\n\nimport beep_error_mp3 from '../Sound/sound 3.mp3' // ошибка\nimport beep_move_mp3 from '../Sound/sound 5.mp3' // движение еды\nimport beep_score_mp3 from '../Sound/sound 4.mp3'\nimport beep_click from '../Sound/sound 1.mp3'\nimport Ot from \"./Ot\";\n\n\n\nconst beep_err = new UIfx(beep_error_mp3)\nconst beep_move = new UIfx(beep_move_mp3)\nconst beep_score = new UIfx(beep_score_mp3)\nconst clicksound = new UIfx(beep_click)\n\n//import * as helper from \"../helpers/helper\";\n//import * as data from \"../images/FunnyCook/data\";\n\n\n\n\n\nfunction Funny_cook(props){\n\n\n\n        const max = 500\n\n        const [command, setCommand] = useState(\"none\")\n        // const commandRef = useRef(command)\n        //\n        // commandRef.current = command;\n\n\n        const [demo, setDemo] = useState(true);\n\n        const [heroPos, setHeroPos] = useState(1)\n\n        const countLButton  = useRef(0)\n        const countRButton = useRef(0)\n        const countEntrButton = useRef(0)\n\n\n        const buttonLDown = useRef(true)\n        const buttonRDown = useRef(true)\n\n        const buttonADown = useRef(false)\n        const buttonBDown = useRef(false)\n        const buttonTDown = useRef(false)\n\n\n\n        const [runner, setRunner] = useState(true)\n        const [start, setStart] = useState(true)\n        const [meat, setMeat] = useState(1)\n        const [sosige, setSosige] = useState(1)\n        const [fish, setFish] = useState(1)\n        const [chiken, setChiken] = useState(1)\n\n        const [skip, setSkip] = useState(0)\n        const [errorfood, setErrorFood] = useState(0)\n        const [cat, setCat] = useState(false)\n\n        const [gameAB, setGameAB] = useState('')\n\n        const [hh, setHh] = useState(0)\n        const [mm, setMm] = useState(0)\n        const [separator, setSeparator] = useState(false)\n        const [dp_pp, setDp_pp] = useState(true)\n\n\n        const [score, setScore] = useState(0)\n        const [resetError, setResetError] = useState(false)\n\n        const [teaport, setTeaport] = React.useState(false);\n\n        const [toCat, setToCat] = useState( Math.floor((Math.random() * (10 - 5) + 5)))\n\n        const [errorcount, setErrorcount] = useState(0)\n\n        const [lastPositionCook, setCook] = useState(heroPos)\n\n        const [up, setUp] = useState(0)\n\n        const [currentfood, setCurrentfood] = useState(1)\n        const currentfoodgRef = useRef(currentfood)\n\n        const [time, setTime] = React.useState(0);\n\n        const [dt, setDt] = React.useState(0.25);\n\n        const runningRef = useRef(runner)\n\n        const meatRef = useRef(meat)\n        const sosigeRef = useRef(sosige)\n        const fishRef = useRef(fish)\n        const chikenRef = useRef(chiken)\n\n        const scoreRef = useRef(score)\n\n        const errorfoodRef = useRef(errorfood)\n\n        const heroPosRef = useRef(heroPos)\n\n        const lastposCookRef = useRef(lastPositionCook)\n\n        const errorfood_pos_Ref = useRef(0)\n\n        runningRef.current = runner;\n        currentfoodgRef.current = currentfood;\n\n\n        meatRef.current = meat;\n        sosigeRef.current = sosige;\n        fishRef.current = fish;\n        chikenRef.current = chiken;\n\n        // if (!demo){\n        //         heroPosRef.current = heroPos\n        // }\n\n        const sendEvent = props.callbackEvent;\n        function send_event(id, param) {\n                sendEvent({ \"action_id\": id, \"parameters\" : param } );\n        }\n\n        const clickGameA = () => {\n                setDt(0.25)\n                setScore(0)\n                setErrorcount(0)\n\n                setRunner(true)\n\n                currentfoodgRef.current = currentfood;\n\n                setCook(1)\n                setDemo(false)\n\n                setGameAB('A');\n\n                restart_game('A', false)\n\n        }\n        const clickGameB = () => {\n                setDt(0.25)\n                setScore(0)\n                setErrorcount(0)\n\n                setRunner(true)\n\n                currentfoodgRef.current = currentfood;\n\n                setCook(1)\n                setDemo(false)\n                setGameAB('B');\n                restart_game('B',false)\n\n        }\n        const clickGameTime = () => {\n\n                setScore(0)\n                setErrorcount(0)\n\n                setRunner(true)\n\n                currentfoodgRef.current = currentfood;\n\n                setCook(1)\n                setDemo(true)\n                setGameAB('');\n                restart_game(\"\", true)\n\n        }\n        const error_food = (pos) =>{\n\n                if (!demo) beep_err.play()\n                setRunner(false)\n                setErrorFood(pos)\n                errorfoodRef.current = pos;\n                errorfood_pos_Ref.current = pos;\n        }\n        const changeDt = () =>{\n\n\n                if (demo){\n                        setDt(0.1);\n                        return\n                }\n                let delay = dt;\n                let s = score % 1000\n\n                if ((s + 1) % 5 === 0) send_event(\"score\", (s + 1).toString())\n\n\n                if (s + 1 < 30) delay = 0.25;\n                if (s + 1 === 30) delay -= 0.02;\n                if (s + 1 === 40) delay -= 0.02;\n                if (s + 1 === 60) delay -= 0.02;\n                if (s + 1 === 80) delay -= 0.02; //\n\n                if (s + 1 === 200) {\n                        delay = 0.25;\n                        setRunner(false);\n                        setResetError(true);\n                        setTimeout(() => {\n\n\n                                setResetError(false);\n                                setRunner(true);\n                                setErrorcount(0)\n\n                        }, 4000);\n                }\n                if (s + 1 === 220) delay -= 0.02;\n                if (s + 1 === 240) delay -= 0.02;\n                if (s + 1 === 260) delay -= 0.02;\n\n\n                if (s + 1 === 500) delay = 0.2;\n                if (s + 1 === 520) delay -= 0.02;\n                if (s + 1 === 540) delay -= 0.02;\n                if (s + 1 === 560) delay -= 0.02;\n\n\n                setDt(delay)\n        }\n        const restart_game = (gameB = \"\", demo) => {\n\n\n                setMeat(1)\n                setSosige( 1)\n                setFish( 1)\n\n                if ((gameB === \"B\") ||  ((demo) && (gameB === \"\"))){\n                        setChiken(1)\n                }else{\n                        setChiken(0)\n                }\n\n\n                setStart(true)\n\n        }\n        const clear_game = (gameB = false) => {\n                setMeat(0)\n                setSosige( 0)\n                setFish( 0)\n                if (gameB === true) {\n                        setChiken(0)\n                }\n\n\n\n\n        }\n        const nextFood = (food, pos3 = false) => {\n\n                const pos = heroPosRef.current\n\n\n\n                if (food === skip)\n                {\n                        setSkip(0)\n                        if (!demo) beep_move.play();\n                        return\n                }\n\n                if (food === 1) {\n\n\n                        setMeat((prev) => {\n\n                                if  (cat && ((prev === 3) || (prev === 7))) return 7;\n\n                                if (prev === 0) {return 0;}\n                                if (pos3) { return 3; }\n                                let s = 0;\n\n                                if (pos === food) s = 2;\n\n                                if (prev !== 9){\n                                        if (!demo) beep_move.play();\n                                }\n\n\n                                const x = prev >= 9 ? s : prev + 1;\n                                meatRef.current = x;\n                                return x;\n\n\n\n                        })\n\n                        if ((pos === food)) {\n                                if ((meatRef.current === 9) ) {\n\n                                        setTimeout(() => {\n                                                setUp(food)\n                                                nextFood(food)\n                                                if (!demo) beep_score.play()\n                                                setScore(prevState => prevState + 1)\n                                                changeDt()\n                                        }, 200);\n                                        setTimeout(() => {\n                                                setUp(0)\n\n                                        }, 400);\n                                }\n\n                        }\n\n                        if (meatRef.current === 0) {error_food(food)}\n\n\n\n                }\n\n                if (food === 2){\n                        setSosige( (prev) => {\n                                if (prev === 0){ return 0}\n                                if (pos3) {\n                                        return 3;\n                                }\n                                let s = 0;\n                                if (pos === food) s = 2;\n                                const x = prev >= 9 ? s: prev + 1 ;\n                                if (prev !== 9){\n                                        if (!demo) beep_move.play();\n                                }\n                                sosigeRef.current = x;\n\n                                return x;\n\n                        })\n                        if ((pos === food)) {\n                                if ((sosigeRef.current === 9) ) {\n                                        setTimeout(() => {\n                                                setUp(food)\n                                                nextFood(food)\n                                                if (!demo) beep_score.play()\n                                                setScore(prevState => prevState + 1)\n                                                changeDt()\n                                        }, 200);\n                                        setTimeout(() => {\n                                                setUp(0)\n\n                                        }, 400);\n\n\n                                }\n                        }\n                        if (sosigeRef.current === 0) {error_food(food)}\n                }\n\n                if (food === 3){\n                        setFish( (prev) => {\n                                if (prev === 0){ return 0}\n                                if (pos3) {\n                                        return 3;\n                                }\n                                let s = 0;\n                                if (pos === food) s = 2;\n                                if (prev !== 9){\n                                        if (!demo) beep_move.play();\n                                }\n                                const x = prev >= 9 ? s : prev + 1;\n\n                                fishRef.current = x;\n\n\n                                return x;\n\n                        })\n                        if ((pos === food)) {\n                                if ((fishRef.current === 9) ) {\n                                        setTimeout(() => {\n                                                setUp(food)\n                                                setScore(prevState => prevState + 1)\n                                                if (!demo) beep_score.play()\n                                                changeDt()\n                                                nextFood(food)\n                                        }, 200);\n                                        setTimeout(() => {\n                                                setUp(0)\n\n                                        }, 400);\n                                }\n                        }\n                        if (fishRef.current === 0) {error_food(food)}\n                }\n\n                if (food === 4){\n                        setChiken( (prev) => {\n                                if (prev === 0){ return 0}\n                                if (pos3) {\n                                        return 3;\n                                }\n                                let s = 0;\n                                if (pos === food) s = 2;\n                                if (prev !== 9){\n                                        if (!demo) beep_move.play();\n                                }\n                                const x = prev >= 9 ? s : prev + 1;\n\n                                chikenRef.current = x;\n\n\n                                return x;\n                        })\n                        if ((chikenRef.current === 9) ) {\n                                setTimeout(() => {\n                                        setUp(food)\n                                        setScore(prevState => prevState + 1)\n                                        if (!demo) beep_score.play()\n                                        changeDt()\n                                        nextFood(food)\n                                }, 200);\n                                setTimeout(() => {\n                                        setUp(0)\n\n                                }, 400);\n                        }\n                        if (chikenRef.current === 0) {error_food(food)}\n                }\n\n\n\n        }\n        const moveDemo = () => {\n\n                const arr = new Array( meatRef.current, sosigeRef.current, fishRef.current, chikenRef.current)\n                let max = arr[heroPosRef.current-1];\n                let index = heroPosRef.current-1;\n                for (let i = 0; i < 4; i++) {\n                        if  (max< arr[i]){\n                                index = i;\n                                max = arr[i];\n\n                        }\n                }\n\n\n                if (max>6){\n                        if (heroPosRef.current < index+1){\n\n                                heroPosRef.current += 1;\n                        }\n                        if (heroPosRef.current > index+1){\n\n                                heroPosRef.current -= 1;\n                        }\n                }\n\n\n\n        }\n\n\n\n        const callbackL = React.useCallback(() => {\n\n                clicksound.play()\n                if (demo) return;\n                setHeroPos( (prev) => {\n                        const x = prev>1?-1:0;\n                        heroPosRef.current = prev + x;\n                        return prev + x;\n                })\n        }, [])\n\n        const callbackR = React.useCallback(() => {\n                clicksound.play()\n                if (demo) return;\n                setHeroPos( (prev) => {\n                        const max = 4;\n                        const x = prev<max?1:0;\n                        heroPosRef.current = prev + x;\n                        return prev + x;\n\n                })\n        }, [])\n        const checkButtonDown = (l, r, entr) => {\n\n                // console.log(l,r,entr, countLButton.current, countRButton.current, countEntrButton.current)\n\n                if  ((countEntrButton.current !== entr) && (entr === 0)){\n                        console.log(\"сбросил entr\", entr, countEntrButton.current)\n                                buttonADown.current = false;\n                                buttonBDown.current = false;\n                                buttonTDown.current = false;\n\n                                countEntrButton.current = 0\n\n                                if (props.buttonFocus === 0){\n\n                                        clickGameA()\n\n                                }\n                                if (props.buttonFocus === 1){\n\n                                        clickGameB()\n\n                                }\n                                if (props.buttonFocus === 2){\n\n                                        clickGameTime()\n\n\n                                }\n\n\n\n                }\n\n                if  ((countLButton.current !== l) && (l === 0)){\n                        buttonLDown.current = false\n                        countLButton.current = 0\n                }\n                if  ((countRButton.current !== r) && (r === 0)){\n                        buttonRDown.current = false\n                        countRButton.current = 0\n                }\n\n                if ((entr > 0) && (entr !== countEntrButton.current)){\n                        countEntrButton.current = entr\n\n                        if (props.buttonFocus === 0){\n                                buttonADown.current = true;\n                                buttonBDown.current = false;\n                                buttonTDown.current = false;\n\n\n                        }\n                        if (props.buttonFocus === 1){\n                                buttonADown.current = false;\n                                buttonBDown.current = true;\n                                buttonTDown.current = false;\n\n\n                        }\n                        if (props.buttonFocus === 2){\n                                buttonADown.current = false;\n                                buttonBDown.current = false;\n                                buttonTDown.current = true;\n\n\n\n                        }\n\n\n                }\n                // else{\n                //         buttonADown.current = false;\n                //         buttonBDown.current = false;\n                //         buttonTDown.current = false;\n                // }\n\n                if ((l > 0) && (l !== countLButton.current)) {\n\n                        countLButton.current = l\n                        buttonLDown.current = true\n\n                        if (demo) return;\n                        setHeroPos((prev) => {\n                                const x = prev > 1 ? -1 : 0;\n                                heroPosRef.current = prev + x;\n                                return prev + x;\n                        })\n\n\n                }\n                //  }else\n                // {\n                //         buttonLDown.current = false\n                // }\n\n                if ((r>0) && (r !== countRButton.current)) {\n\n                        countRButton.current = r\n                        buttonRDown.current = true\n                        if (demo) return;\n                        setHeroPos( (prev) => {\n                                const max = 4;\n                                const x = prev<max?1:0;\n                                heroPosRef.current = prev + x;\n                                return prev + x;\n\n                        })\n                }\n                // else\n                // {\n                //         buttonRDown.current = false\n                // }\n\n\n        }\n\n        React.useEffect(() => {\n                const timer = window.setInterval(() => {\n\n                        setTime(prevTime => prevTime + 1); // <-- Change this line!\n\n                        if (props.buttonLDown !== countLButton.current ||\n                            props.buttonRDown !== countRButton.current ||\n                            props.buttonEnterDown !== countEntrButton.current)  checkButtonDown(props.buttonLDown, props.buttonRDown, props.buttonEnterDown)\n\n                        if (errorfoodRef.current > 0) {\n\n                                if (time % 30 === 0) {\n                                        if (!demo) beep_err.play()\n                                        setErrorFood((prev) => {\n\n                                                const x = prev >= 5 ? 0 : prev + 1;\n                                                errorfoodRef.current = x;\n                                                return x;\n\n                                        })\n                                        if (errorcount<=5 || demo)\n                                        {\n\n                                                if (errorfoodRef.current === 0){\n                                                        if (!demo) beep_err.play()\n                                                        if (errorcount<5 || demo){\n                                                                setRunner(true)\n                                                                setErrorcount((prevState) => {\n\n                                                                        const add = teaport===true?1:2;\n                                                                        return prevState + add;\n                                                                        }\n                                                                    )\n                                                                restart_game(gameAB, demo)\n                                                        }\n                                                        if (errorcount >= 5 && !demo)  {\n                                                                setErrorcount((prevState) => {\n\n                                                                            const add = teaport===true?1:2;\n                                                                            return prevState + add;\n                                                                    }\n                                                                )\n                                                                // setErrorcount(prevState => prevState + 1)\n\n\n                                                                        setErrorFood(-1);\n                                                                        clear_game();\n                                                        }\n                                                }\n                                        }\n\n                                }\n                        }\n\n                        if (!runner){\n                                return\n                        }\n\n\n                         if (start){\n                                setTimeout(() => {\n\n                                        setStart(false)\n                                }, 2000);\n                         return;\n                         }\n\n\n                        // if ((props.posgame === 1) && (props.posgame === up) && (meatRef.current > 2) ) {\n                        //         setUp(0)\n                        // }\n\n\n\n                        getUp();\n\n\n                        const t = Math.floor(dt * 30 / 0.25);\n\n                        if (time % (t) === 0) {\n\n                                if (start){\n                                        setStart(false)\n                                }\n\n\n\n                                if (toCat === 1){\n                                        setToCat(Math.floor((Math.random() * (30 - 10) + 10)))\n                                        setCat(prevState => !prevState)\n                                }\n                                else{\n                                        setToCat(prevState => prevState - 1)\n                                }\n\n\n                                // if ((Math.random()<0.03)){\n                                //         setCat(prevState => !prevState)\n                                //         const t =  Math.random() * (6000 - 2000) + 2000;\n                                //         console.log(\"жду\", t)\n                                //\n                                //         setTimeout(() => {\n                                //                 setTeaport(false)\n                                //         }, t);\n                                //\n                                //\n                                // }\n\n                                if ((!teaport) && (Math.random()<0.03)){\n                                        setTeaport(true)\n\n                                        const t =  Math.random() * (6000 - 2000) + 2000;\n                                        setTimeout(() => {\n                                                setTeaport(false)\n                                        }, t);\n\n\n                                }\n\n                                setCurrentfood((prev) => {\n                                        let stop = 3;\n                                        if ((gameAB === 'B') || (gameAB === '')) stop =4;\n\n                                        const x = prev >= stop ? 1 : prev + 1;\n                                        return x;\n\n                                })\n\n                                nextFood(currentfood)\n                                // checkBeginError(props.posgame)\n\n                                // checkEndError(props.posgame)\n\n\n\n                        }\n\n                        if (demo &&  Math.floor(time % 15) === 0)\n                        {\n                                moveDemo()\n                        }\n\n                }, 10);\n                return () => {\n                        window.clearInterval(timer);\n                };\n        }, [time]);\n        React.useEffect(() => {\n                const timer = window.setInterval(() => {\n\n                        setSeparator(prevState => !prevState)\n                        const d = new Date();\n                        //                         let unix_timestamp = 1549312452\n                        // // Create a new JavaScript Date object based on the timestamp\n                        // // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n                        //                         var date = new Date(unix_timestamp * 1000);\n                        // // Hours part from the timestamp\n                        //                         var hours = date.getHours();\n                        // // Minutes part from the timestamp\n                        //                         var minutes = \"0\" + date.getMinutes();\n                        // // Seconds part from the timestamp\n                        //                         var seconds = \"0\" + date.getSeconds();\n                        //\n                        // // Will display time in 10:30:23 format\n                        //                         var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n\n                        // console.log(formattedTime);\n                        setDp_pp(d.getHours() < 12);\n                        setHh((d.getHours() < 12) ? d.getHours() : d.getHours() - 12);\n                        setMm(d.getMinutes());\n\n\n\n                }, 1000);\n                return () => {\n                        window.clearInterval(timer);\n                };\n        }, [separator]);\n\n\n        function upfood(pos, food, stand = false){\n\n                if ((food === 9)){\n\n                        setTimeout(() => {\n\n                                setScore(prevState => prevState + 1)\n                                if (!demo) beep_score.play()\n                                changeDt()\n\n                                nextFood(heroPosRef.current)\n                                setSkip(pos)\n                                setUp(heroPosRef.current)\n                        }, 200);\n                        setTimeout(() => {\n                                setUp(0)\n\n                        }, 500);\n\n                        const addtime = time % 50\n                        setTime(prevTime => prevTime + addtime)\n                        setCurrentfood((prev) => {\n                                const x = prev >= 3 ? 1 : prev + 1;\n                                return x;\n                        })\n                }\n\n                if ((food === 8)){\n\n                        setUp(heroPosRef.current)\n                        setSkip(pos)\n                        if (!demo) beep_move.play();\n                        setScore(prevState => prevState + 1)\n                        if (!demo) beep_score.play()\n                        changeDt()\n                        setTimeout(() => {\n                                 nextFood(heroPosRef.current, true)\n\n                        }, 200);\n\n                        const addtime = time % 50\n                        setTime(prevTime => prevTime + addtime)\n                        setCurrentfood((prev) => {\n                                const  x = prev >= 3 ? 1 : prev + 1;\n                                return x;\n                        })\n                        setTimeout(() => {\n                                setUp(0)\n                        }, 500);\n                }\n        }\n        function ckeck(pos) {\n\n\n                if (  ((pos === 1) && (meatRef.current   > 3)  && (up === 1)) ||\n                      ((pos === 2) && (sosigeRef.current > 3)  && (up === 2)) ||\n                      ((pos === 3) && (fishRef.current   > 3)  && (up === 3)) ||\n                      ((pos === 4) && (chikenRef.current > 3)  && (up === 4))) {\n                              setUp(0)\n                        }\n\n                if (pos === 1) {\n                        upfood(pos, meatRef.current)\n                }\n                if (pos === 2) {\n                        upfood(pos, sosigeRef.current)\n                }\n                if (pos === 3) {\n                        upfood(pos, fishRef.current)\n                }\n                if (pos === 4) {\n                        upfood(pos, chikenRef.current)\n                }\n\n        }\n\n        function getUp() {\n\n                if (!demo && lastposCookRef.current !== heroPos) {\n\n                        lastposCookRef.current = heroPos\n                        setCook(lastposCookRef.current)\n                        ckeck(lastposCookRef.current)\n\n                }\n                if (demo && lastposCookRef.current !== heroPosRef.current) {\n\n                        lastposCookRef.current = heroPosRef.current\n                        ckeck(lastposCookRef.current)\n\n                }\n        }\n\n        if ((props.commandfromback === 'povar_gameA') && (command !== props.commandfromback)) {\n\n                setCommand(props.commandfromback)\n                clickGameA()\n        }\n\n        if ((props.commandfromback === 'povar_gameB') && (command !== props.commandfromback)) {\n\n                setCommand(props.commandfromback)\n                clickGameB()\n        }\n\n        const styles = {\n                transform: `scale( ${props.scale}, ${props.scale})`,\n                position: \"absolute\",\n                top: `${props.top}px`,\n                left: `${props.left}px`\n\n        };\n\n\n        return (\n\n            <div style={styles}>\n                   <div style = {{transform: `rotate( ${props.rotate}deg )`}}>\n                           <BackgroundGame />\n\n                           {props.scale > 0.3 && <Controls\n                                     callbackL = {callbackL}\n                                     callbackR = {callbackR}\n                                     buttonLDown = { buttonLDown.current}\n                                     buttonRDown = { buttonRDown.current}\n\n                                     buttonADown = { buttonADown.current}\n                                     buttonBDown = { buttonBDown.current}\n                                     buttonTDown = { buttonTDown.current}\n\n                                     callGameA = {clickGameA}\n                                     callGameB = {clickGameB}\n                                     callbackTime = {clickGameTime}\n                                     demo = {props.demo}\n                                     character = {props.character}\n                           />}\n                           <Player posgame = {heroPosRef.current} up = {up} start = {start} gameAB = {gameAB}/>\n                           <Food meat = {meat} sosige = {sosige} fish = {fish} chiken = {chiken}/>\n                           <ErrorFood pos = {errorfood} />\n                            {!demo && <Score score = {score % 1000} />}\n                            {!demo && <ErrorCount count = {errorcount} resetError = {resetError}/>}\n                            {!demo && <ErrorCount count = {errorcount} resetError = {resetError}/>}\n                           <Cat catStay = {!cat} catFork = {cat} />\n                           <Teaport teaport = {teaport} />\n\n                            {demo && <Time hh = {hh} mm = {mm} dp_pp = {dp_pp} sep = {separator}/>}\n\n\n                    </div>\n            </div>);\n};\n\nexport default memo(Funny_cook);\n\n","import React, {memo, useState} from 'react';\nimport TweenOne from 'rc-tween-one';\nimport BezierPlugin from 'rc-tween-one/lib/plugin/BezierPlugin';\nimport Games from \"./Games\";\n\nimport * as constant from \"../const\";\n\nimport * as data from \"../images/FunnyCook/data.js\"\nimport * as helper from \"../helpers/helper\"\n\nimport FunnyCook from \"./FunnyCook\"\nimport Ot from \"./Ot\"\n\nimport {detectDevice} from \"@sberdevices/ui/utils\";\n// import * as constant from \"../const\"\nTweenOne.plugins.push(BezierPlugin);\n\n\nfunction Main(props) {\n\n    // const [game, setGame] = useState(\"Ot\");\n\n    // const character = props.character\n\n    const width = window.innerWidth  ;\n    const height = window.innerHeight ;\n\n\n\n    const getscale = () => {\n\n        let device = props.device\n\n\n\n        if  ((device === \"touch\") && (width !== 1920) && false)\n        {\n            console.log(width, height)\n            console.log(\"kx:\", width / 1920.0, width)\n            console.log(\"ky:\", height / 1080.0, height)\n\n           if (props.insets.bottom === undefined)\n            return {scale :0, rotate : 90, top: 0, left:\"100%\"}\n\n            let scale = 1080.0 / width\n\n            if (1920.0 * scale > window.innerHeight - props.insets.bottom)\n            {\n                scale = (window.innerHeight - props.insets.bottom) / 1920.0\n            }\n\n            return  {scale :scale, rotate : 90, top: 0, left:\"100%\"}\n\n\n            // device = \"sberPortal\";\n        }\n\n        switch (device) {\n            case \"sberBox\":\n                return  {scale : height / 1080.0, rotate : 0, top: 0, left:0}\n            case \"sberPortal\":\n                return    {scale : height / 1080.0, rotate : 0, top: 0, left:0}\n\n            default:\n                return   {scale : height / 1080.0, rotate : 0, top: 0, left:0}\n        }\n\n    }\n    const param = getscale()\n\n    console.log(param)\n\n\n    // const posgame = props.posgame\n\n    const top = 0\n    const left = 0\n\n    // if   (props.game !== props.commandfromback)\n    // {\n    //     switch (props.commandfromback) {\n    //\n    //         case 'povar': {\n    //             setGame('povar')\n    //             break;\n    //\n    //         }\n    //\n    //     }\n    //\n    // }\n\n    return (\n\n        <>\n\n            {props.game === 'all' &&  <Games device = {props.device} gameFocus = {props.gameFocus} callbackClickGame = {props.callbackClickGame}/>}\n\n\n\n            {props.game === 'povar' && <FunnyCook   scale = {param.scale}\n                                                    rotate = {param.rotate}\n                                                    top = {param.top}\n                                                    left = {param.left}\n                                                    // posgame = {posgame}\n                                                    // callbackL = {props.callbackL}\n                                                    // callbackR = {props.callbackR}\n                                                    buttonLDown ={props.buttonLDown}\n                                                    buttonRDown ={props.buttonRDown}\n                                                    buttonEnterDown = {props.buttonEnterDown}\n                                                    commandfromback = {props.commandfromback}\n                                                    character = {props.character}\n                                                    buttonFocus = {props.buttonFocus}\n                                                    callbackEvent = {props.callbackEvent}\n                                                    vers = {props.vers}\n            /> }\n\n                {props.game === 'ot' && <Ot scale = {param.scale}\n                                            rotate = {param.rotate}\n                                            top = {param.top}\n                                            left = {param.left}\n                                            // posgame = {posgame}\n                                            // callbackL = {props.callbackL}\n                                            // callbackR = {props.callbackR}\n                                            buttonLDown ={props.buttonLDown}\n                                            buttonRDown ={props.buttonRDown}\n                                            commandfromback = {props.commandfromback}\n                                            character = {props.character}\n                                            buttonEnterDown = {props.buttonEnterDown}\n                                            buttonFocus = {props.buttonFocus}\n                                            callbackEvent = {props.callbackEvent}\n                                            vers = {props.vers}\n            /> }\n\n        </>\n    );\n}\n\nexport default memo(Main);\n\n","export default __webpack_public_path__ + \"static/media/background_1280x800_s.42412c6b.jpg\";","export default __webpack_public_path__ + \"static/media/background_1280x800_a.22cc10a3.jpg\";","export default __webpack_public_path__ + \"static/media/background_1280x800_j.a6b96c1d.jpg\";","export default __webpack_public_path__ + \"static/media/background_1980x1080_s.cab348ec.jpg\";","export default __webpack_public_path__ + \"static/media/background_1980x1080_a.764ddacd.jpg\";","export default __webpack_public_path__ + \"static/media/background_1980x1080_j.8a84c2bd.jpg\";","\nimport React, {useState, useRef, useEffect, memo, FC} from 'react';\nimport {\n    createSmartappDebugger,\n    createAssistant,\n    AssistantAppState,AssistantCharacterType\n} from \"@sberdevices/assistant-client\";\n\n// createGlobalStyle нужен для создания глобальных стилей\nimport styled, { createGlobalStyle } from 'styled-components';\n\n// получаем значение для целевой платформы\nimport { sberBox,  touch } from '@sberdevices/plasma-tokens/typo';\nimport { darkJoy, darkEva, darkSber } from '@sberdevices/plasma-tokens/themes';\n// получаем стилевые объекты для нашего интерфейса\nimport { body1} from '@sberdevices/plasma-tokens';\n\nimport {sberPortal} from './helpers/css/portalcss'\n\n// получаем цвета для нашего интерфейса\nimport {  background,  } from '@sberdevices/plasma-tokens';\n\n\n\n\n\nimport Main from './components/Main'\n\nimport UIfx from 'uifx'\nimport beepMp3 from './Sound/sound 1.mp3'\n\nimport img_background_portal_sber from \"./images/background_1280x800_s.jpg\"\nimport img_background_portal_ava from \"./images/background_1280x800_a.jpg\"\nimport img_background_portal_joy from \"./images/background_1280x800_j.jpg\"\n\nimport img_background_sber from \"./images/background_1980x1080_s.jpg\"\nimport img_background_ava from \"./images/background_1980x1080_a.jpg\"\nimport img_background_joy from \"./images/background_1980x1080_j.jpg\"\n\n\n\n\n\nimport { detectDevice } from '@sberdevices/ui/utils';\nimport {CardMedia} from \"@sberdevices/ui\";\n\nconst ThemeBackgroundEva = createGlobalStyle(darkEva);\nconst ThemeBackgroundSber = createGlobalStyle(darkSber);\nconst ThemeBackgroundJoy = createGlobalStyle(darkJoy);\nconst TypoScaleSberBox = createGlobalStyle(sberBox);\nconst TypoScaleSberPortal = createGlobalStyle(sberPortal);\nconst TypoScaleTouch = createGlobalStyle(touch);\n\n\nconst beep = new UIfx(beepMp3)\n\nconst AppStyled = styled.div`\n  //padding: 30px;\n  ${body1}\n`;\n\n\n\n\n\n\nconst initializeAssistant = (getState: any) => {\n    // process.env.REACT_APP_TOKEN\n    const token = process.env.REACT_APP_TOKEN ||  \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1MDI3ZmZjZmNkNTc5ZDExYmFhY2IwNjZmOTIzZGQ4MjBkNGZhMjI3MmE3NzkwY2Q5ZGZhYjg4MjE2ZGE1ZTk4ODA1NjQ2ZDBjMjJlYmU2MyIsImF1ZCI6IlZQUyIsImV4cCI6MTYyMDQ2OTY5NCwiaWF0IjoxNjIwMzgzMjg0LCJpc3MiOiJLRVlNQVNURVIiLCJ0eXBlIjoiQmVhcmVyIiwianRpIjoiNGFlZGVlMGEtYzUxZi00OWE5LWI2MzAtMjFjYjkwYjY3MTgzIiwic2lkIjoiYzUwMzQxNTktMGVmMS00MDVjLWE2ZGQtYWQzNzRjMTQ3YzNjIn0.NkegM3DVk1Z-o1MybOgCQHuaRVA1cZEZlhFbXzWDrmhPTDQj2WiipzENQm6DQEkTbAIDs-5jzggBd6MI6sQq5gu16LQ1waT8Oc1r8KM457KHQWp-BlihCPIQC8AkYBOTsyZx4STgi2RPfgfitaJiKK3XJhcZ6uG1V1qHWlu1tQ7c0jacsDc6zmtdTiimPopg-tEejMLWaXNIARbWzRspgRJiO-Hs3U_q0nsmBf_rZdqe0t1POqTYix8l1VUZB2q8gGy0cJnx2vKv-DT9b4cHC5aavwz2Le5ZE1RKcEJI6sWqLKKkg2248G5L8Pzol5nG5ege9r5SgadHGkAJe0uUawxzcBBTAPB3irgUKM2P-0gWupVhlQqge2Z-YSWqmP_36llaxvzCeaqRh0P5ol2B3fZBaLjpmrQTVcukNM061yQvrdEeP7zBsaYy75lMWKO7CeK1IUcJTcu8aGL4A2x65c8VDJhmD7Og6mRUk1Pe_B6rCxoFkCMvTUZttls6_zvrYnt2Tpn_dbQHEqngyjxLxHxNgMepYXG9mU0ccAirTQbXh6PpbdXT2RRHWS3HD5Z2w6bFecDQCbbsf6YLw5FErNDLpSZ8cGym3MuJ5g_Kxu0qznys-cgBsSSE_zzvKHNmb34jP0AdMyVLqKLRIpS_ZTGVWT2yPFsMoWPuWdLAXD8\"\n\n\n    if (process.env.NODE_ENV === \"development\") {\n\n        return createSmartappDebugger({\n            token: token?? \"\",\n            initPhrase: \"открой Электроника\",\n            getState,\n        });\n    }\n\n    return createAssistant({ getState });\n};\n\nexport const App: FC = memo(() => {\n\n    const [character, setCharacter] = useState(\"joy\" as AssistantCharacterType);\n    const [insets, setInsets] = useState({})\n    const assistantStateRef = useRef<AssistantAppState>();\n    const assistantRef = useRef<ReturnType<typeof createAssistant>>();\n    const [commands, setCommands] = useState([]);\n\n\n    const [posGame, setPosGame] = useState(1);\n    const [command, setCommand] = useState(\"\")\n    const [buttonLDown, setButtonLDown] = useState(0);\n    const [buttonRDown, setButtonRDown] = useState(0);\n    const [buttonEnterDown, setButtonEnterDown] = useState(0);\n    // -------------------------------------------------------------------------\n\n    const [game, setGame] = useState(\"all\");\n    // -------------------------------------------------------------------------\n\n\n    const [time, setTime] = React.useState(0);\n\n    const timeRef = useRef(0)\n    // const buttonLDownRef = useRef(0)\n    // const buttonRDownRef = useRef(0)\n\n    const [buttonFocus, SetButtonFocus] = useState(1)\n    const [gameFocus, setGameFocus] = useState(1)\n\n    const focusRef = useRef(1)\n    const gameRef = useRef(\"all\")\n\n    focusRef.current = gameFocus;\n    gameRef.current = game;\n\n    const event = React.useCallback((action) => {\n\n        assistantRef.current?.sendData({ action: action });\n        console.log(action)\n\n        }, [])\n\n    // const sendCommand = (name: string, command: any) => {\n    //\n    //     setCommand(prevState => {\n    //         return [...prevState, `sending command \"${name}\" with params ${JSON.stringify(command)}`];\n    //     })\n    //     // setCommands(prevState => {\n    //     //     return [...prevState, `sending command \"${name}\" with params ${JSON.stringify(command)}`];\n    //     // }\n    //     // );\n    //\n    //     assistantRef.current?.sendData({ action: { action_id: name, parameters: command } });\n    // }\n\n    // const handleOnClick = () => {\n    //     sendCommand(\"hello\", { \"text\": \"world\"});\n    // };\n\n    // const leftbuttondown = React.useCallback(() => {\n    //     beep.play()\n    //     setPosGame( (prev) => {\n    //         const x = prev>1?-1:0;\n    //         return prev + x;\n    //     })\n    // }, [])\n    //\n    // const rightbuttondown = React.useCallback(() => {\n    //     beep.play()\n    //\n    //     let max = 4;\n    //     if (game === 'Ot') {\n    //         max = 5;\n    //     }\n    //     setPosGame( (prev) => {\n    //         const x = prev<max?1:0;\n    //         return prev + x;\n    //\n    //     })\n    // }, [])\n\n\n    const getcommand = React.useCallback((command) => {\n\n        if (command !== undefined)  setCommand( command)\n\n    }, [])\n\n\n    const callbackClickGame = React.useCallback((inx) => {\n\n        setGameFocus(inx)\n        console.log(\"callback\", gameFocus)\n\n    }, [gameFocus])\n\n\n    const downHandler = (event:any) => {\n        // ArrowDown\n        // ArrowUp\n\n        if ((event.code === 'ArrowLeft') || (event.keyCode === 37)) {\n\n\n           if (gameRef.current !== 'all'){\n               beep.play()\n               setButtonLDown(timeRef.current)\n           }else{\n\n               console.log(\"gameFocus\", gameFocus)\n\n               setGameFocus(prevState => {\n                   return prevState-1<0?0:prevState-1;\n\n\n               })\n           }\n\n\n        }\n        // else{\n        //     setButtonLDown(0)\n        // }\n\n        if (event.code === 'ArrowRight' || event.keyCode === 39) {\n\n            // rightbuttondown()\n            if (gameRef.current !== 'all'){\n                beep.play()\n                setButtonRDown(timeRef.current)\n            }else{\n                console.log(\"gameFocus\", gameFocus)\n                setGameFocus(prevState => {\n\n                    return prevState+1>=2?2:prevState+1;\n\n\n                })\n            }\n\n\n        }\n        // else{\n        //     setButtonRDown(0)\n        // }\n\n        if (event.code === 'ArrowUp' || event.keyCode === 38){\n            SetButtonFocus(prevState => {\n\n                const n =  prevState-1<0?0:prevState-1;\n                console.log(\"ArrowUp\", n)\n                return  n\n\n            })\n\n\n\n        }\n\n        if (event.code === 'ArrowDown' || event.keyCode === 40){\n            SetButtonFocus(prevState => {\n\n                const n =  prevState+1>2?2:prevState+1;\n                console.log(\"ArrowDown\",n)\n                return  n\n\n\n            })\n\n\n        }\n\n        if (event.code === 'Enter' || event.keyCode === 13) {\n\n            // rightbuttondown()\n            if ((gameRef.current !== 'all')){\n                beep.play()\n                setButtonEnterDown(timeRef.current)\n            }\n            else\n            {\n\n                if (focusRef.current === 0) setGame(\"ot\")\n                if (focusRef.current === 1) setGame(\"povar\")\n\n            }\n        }\n\n        window.history.pushState({name: \"start\"}, \"\");\n\n        window.addEventListener(\"popstate\", e => {\n\n\n\n\n            if (e.state == null) {\n                console.log(\"back:\" + e.state);\n                setGame('all')\n                e.preventDefault();\n                // this.send(\"KeyPressed\", {\n                //     key: event.keyCode,\n                //     type: \"back\"\n                // })\n\n            }\n        }, true);\n\n        if (event.code === 'Back' || event.keyCode === 4 || (event.code === 'Backspace')){\n\n\n        }\n\n\n\n    }\n\n\n\n\n    const upHandler = (event:any) =>{\n\n        if (event.code === 'ArrowLeft' || event.keyCode === 37 ) {\n            setButtonLDown(0)\n\n\n        }\n        if (event.code === 'ArrowRight' || event.keyCode === 39) {\n             setButtonRDown(0)\n\n\n        }\n\n        if (event.code === 'Enter' || event.keyCode === 13) {\n            setButtonEnterDown(0)\n        }\n    }\n\n\n    useEffect(() => {\n        window.addEventListener('keydown', downHandler);\n        window.addEventListener('keyup', upHandler);\n\n        // Remove event listeners on cleanup\n        return () => {\n            window.removeEventListener('keydown', downHandler);\n            window.removeEventListener('keyup', upHandler);\n        };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n\n    useEffect(() => {\n        assistantRef.current = initializeAssistant(() => assistantStateRef.current);\n\n\n        assistantRef.current.on(\"data\", (command) => {\n\n            console.log(`command: ${JSON.stringify(command)}`);\n\n            switch (command.type) {\n\n                case  \"insets\" :\n                    console.log(command.insets)\n                    setInsets(command.insets)\n                    break;\n\n                case \"character\":\n\n                    setCharacter(command.character.id);\n                    console.log(command.character.id)\n                    // 'sber' | 'eva' | 'joy';\n                    break;\n                case \"navigation\":\n                    switch(command.navigation.command) {\n                        case 'LEFT':\n                            console.log('LEFT')\n                            setButtonLDown(timeRef.current)\n                            break;\n                        case 'RIGHT':\n                            console.log('RIGHT')\n                            setButtonRDown(timeRef.current)\n                            break;\n\n                        default:\n                    }\n                    break;\n\n\n\n                case \"smart_app_data\":\n\n                    // @ts-ignore\n                    const  c =  command.smart_app_data.game\n\n                          // getcommand(c);\n                          break;\n\n\n                default:\n                    return;\n            }\n\n\n        });\n    }, []);\n\n    React.useEffect(() => {\n        const timer = window.setInterval(() => {\n\n            setTime(prevTime => prevTime + 1); // <-- Change this line!\n            timeRef.current = time;\n\n\n        }, 10);\n        return () => {\n            window.clearInterval(timer);\n        };\n    }, [time]);\n\n\n\n\n\n    let background_img = `none`\n    let device = detectDevice();\n\n    if ((device === \"sberBox\") || (device === \"touch\") ){\n\n     if (character === \"sber\")   background_img = `url(${img_background_sber})`\n     if (character === \"eva\")    background_img = `url(${img_background_ava})`\n     if (character === \"joy\")    background_img = `url(${img_background_joy}) `\n\n    }\n\n    if ((device === \"sberPortal\")){\n\n        if (character === \"sber\")     background_img = `url(${img_background_portal_sber})`\n        if (character === \"eva\")      background_img = `url(${img_background_portal_ava})`\n        if (character === \"joy\")      background_img = `url(${img_background_portal_joy})`\n    }\n    // if ((device === \"touch\") && false){\n    //\n    //    background_img = `url(${img_background_touch})`\n    //\n    // }\n    const width = window.innerWidth  ;\n    const height = window.innerHeight ;\n\n    const GlobalBackground = createGlobalStyle`\n      html {\n        background-image: ${background_img};\n        background-size: ${width}px ${height}px ;\n        min-height: 100vh;\n        background-color: ${background};\n\n      }\n    `\n\n\n\n\n    const VERS = \"0.0.9.9\"\n\n  //   const DocStyle = createGlobalStyle`\n  //     html {\n  //       color: ${text};\n  //       background-color: ${background};\n  //       //background-image: ${gradient};\n  //       background-size: cover;\n  //       background-image: url(${img_background_sber});\n  //\n  //       min-height: 100vh;\n  //     }\n  //\n  // `;\n\n    return (\n        //\n        <AppStyled>\n\n            {/*<GlobalBackground />*/}\n\n\n\n\n            {(() => {\n                let device = detectDevice();\n\n                // device = \"sberBox\" as \"sberPortal\" | \"sberBox\" | \"touch\";\n                // is for testing only\n                // detectDevice() returns \"touch\" for local run\n                // ... or change user-agent in browser\n                //\n                if  (device === \"touch\")\n                {\n                    device = \"sberBox\" as \"sberPortal\" | \"sberBox\" | \"touch\";\n                }\n\n                switch (device) {\n                    case \"sberBox\":\n                        return <TypoScaleSberBox />\n                    case \"sberPortal\":\n                        return <TypoScaleSberPortal />\n                    case \"touch\":\n                        return <TypoScaleTouch />\n                    default:\n                        return;\n                }\n            })()}\n            {(() => {\n                switch (character) {\n                    case \"sber\":\n                        return <ThemeBackgroundSber />;\n                    case \"eva\":\n                        return <ThemeBackgroundEva />;\n                    case \"joy\":\n                        return <ThemeBackgroundJoy />;\n                    default:\n                        return;\n                }\n            })()}\n\n\n            <>\n\n                {/*<Header*/}\n                {/*    back={true}*/}\n                {/*    logo={iconApp}*/}\n                {/*    logoAlt=\"Logo\"*/}\n                {/*    title = 'Электроника'*/}\n                {/*    subtitle = 'Subtitle text'*/}\n\n                {/*    onBackClick={() => console.log('Back click!')}*/}\n                {/*>*/}\n                {/*    <div>dsfd</div>*/}\n                {/*</Header>*/}\n\n\n                <div style={{position: \"absolute\", top: 50, left:50, color: \"black\", zIndex: 99999, fontSize: 20}}>\n                    <div> vers: {VERS} </div>\n\n                    <div>display :{window.innerWidth}, {window.innerHeight }</div>\n                </div>\n\n\n                    {false && < Main device={detectDevice()}\n                             insets={insets}\n                             character={character}\n                             posgame={posGame}\n                        // callbackL = {leftbuttondown}\n                        // callbackR = {rightbuttondown}\n                             buttonLDown={buttonLDown}\n                             buttonRDown={buttonRDown}\n                             buttonEnterDown={buttonEnterDown}\n\n                             commandfromback={command}\n                             game={game}\n                             buttonFocus={buttonFocus}\n                             callbackEvent={event}\n                             vers={VERS}\n                             gameFocus = {gameFocus}\n\n                             callbackClickGame ={callbackClickGame}\n\n                    />}\n\n\n\n\n\n            </>\n        </AppStyled>\n        // </GlobalBackground>\n    );\n});\n\nexport default App;","export const sberPortal = {\n    \":root\": {\n        \"font-size\": \"22px\",\n        \"--plasma-typo-display1-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-display1-fontWeight\": 500,\n        \"--plasma-typo-display1-fontStyle\": \"normal\",\n        \"--plasma-typo-display1-fontSize\": \"6rem\",\n        \"--plasma-typo-display1-letterSpacing\": \"-0.0190em\",\n        \"--plasma-typo-display1-lineHeight\": \"6rem\",\n        \"--plasma-typo-display2-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-display2-fontWeight\": 500,\n        \"--plasma-typo-display2-fontStyle\": \"normal\",\n        \"--plasma-typo-display2-fontSize\": \"3.75rem\",\n        \"--plasma-typo-display2-letterSpacing\": \"-0.0190em\",\n        \"--plasma-typo-display2-lineHeight\": \"4rem\",\n        \"--plasma-typo-display3-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-display3-fontWeight\": 500,\n        \"--plasma-typo-display3-fontStyle\": \"normal\",\n        \"--plasma-typo-display3-fontSize\": \"3rem\",\n        \"--plasma-typo-display3-letterSpacing\": \"normal\",\n        \"--plasma-typo-display3-lineHeight\": \"3.25rem\",\n        \"--plasma-typo-headline1-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-headline1-fontWeight\": 700,\n        \"--plasma-typo-headline1-fontStyle\": \"normal\",\n        \"--plasma-typo-headline1-fontSize\": \"2rem\",\n        \"--plasma-typo-headline1-letterSpacing\": \"-0.0110em\",\n        \"--plasma-typo-headline1-lineHeight\": \"2.25rem\",\n        \"--plasma-typo-headline2-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-headline2-fontWeight\": 600,\n        \"--plasma-typo-headline2-fontStyle\": \"normal\",\n        \"--plasma-typo-headline2-fontSize\": \"1.5rem\",\n        \"--plasma-typo-headline2-letterSpacing\": \"-0.0220em\",\n        \"--plasma-typo-headline2-lineHeight\": \"1.75rem\",\n        \"--plasma-typo-headline3-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-headline3-fontWeight\": 600,\n        \"--plasma-typo-headline3-fontStyle\": \"normal\",\n        \"--plasma-typo-headline3-fontSize\": \"1.25rem\",\n        \"--plasma-typo-headline3-letterSpacing\": \"-0.0250em\",\n        \"--plasma-typo-headline3-lineHeight\": \"1.5rem\",\n        \"--plasma-typo-headline4-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-headline4-fontWeight\": 700,\n        \"--plasma-typo-headline4-fontStyle\": \"normal\",\n        \"--plasma-typo-headline4-fontSize\": \"1.25rem\",\n        \"--plasma-typo-headline4-letterSpacing\": \"-0.0250em\",\n        \"--plasma-typo-headline4-lineHeight\": \"1.5rem\",\n        \"--plasma-typo-body1-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-body1-fontWeight\": 500,\n        \"--plasma-typo-body1-fontStyle\": \"normal\",\n        \"--plasma-typo-body1-fontSize\": \"1rem\",\n        \"--plasma-typo-body1-letterSpacing\": \"-0.0190em\",\n        \"--plasma-typo-body1-lineHeight\": \"1.25rem\",\n        \"--plasma-typo-body2-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-body2-fontWeight\": 600,\n        \"--plasma-typo-body2-fontStyle\": \"normal\",\n        \"--plasma-typo-body2-fontSize\": \"1rem\",\n        \"--plasma-typo-body2-letterSpacing\": \"-0.0190em\",\n        \"--plasma-typo-body2-lineHeight\": \"1.25rem\",\n        \"--plasma-typo-body3-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-body3-fontWeight\": 700,\n        \"--plasma-typo-body3-fontStyle\": \"normal\",\n        \"--plasma-typo-body3-fontSize\": \"1rem\",\n        \"--plasma-typo-body3-letterSpacing\": \"-0.0190em\",\n        \"--plasma-typo-body3-lineHeight\": \"1.25rem\",\n        \"--plasma-typo-paragraph1-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-paragraph1-fontWeight\": 400,\n        \"--plasma-typo-paragraph1-fontStyle\": \"normal\",\n        \"--plasma-typo-paragraph1-fontSize\": \"1rem\",\n        \"--plasma-typo-paragraph1-letterSpacing\": \"-0.0190em\",\n        \"--plasma-typo-paragraph1-lineHeight\": \"1.375rem\",\n        \"--plasma-typo-paragraph2-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-paragraph2-fontWeight\": 600,\n        \"--plasma-typo-paragraph2-fontStyle\": \"normal\",\n        \"--plasma-typo-paragraph2-fontSize\": \"1rem\",\n        \"--plasma-typo-paragraph2-letterSpacing\": \"-0.0190em\",\n        \"--plasma-typo-paragraph2-lineHeight\": \"1.375rem\",\n        \"--plasma-typo-footnote1-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-footnote1-fontWeight\": 500,\n        \"--plasma-typo-footnote1-fontStyle\": \"normal\",\n        \"--plasma-typo-footnote1-fontSize\": \"0.875rem\",\n        \"--plasma-typo-footnote1-letterSpacing\": \"-0.0190em\",\n        \"--plasma-typo-footnote1-lineHeight\": \"1.125rem\",\n        \"--plasma-typo-footnote2-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-footnote2-fontWeight\": 600,\n        \"--plasma-typo-footnote2-fontStyle\": \"normal\",\n        \"--plasma-typo-footnote2-fontSize\": \"0.875rem\",\n        \"--plasma-typo-footnote2-letterSpacing\": \"-0.0190em\",\n        \"--plasma-typo-footnote2-lineHeight\": \"1.125rem\",\n        \"--plasma-typo-button1-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-button1-fontWeight\": 600,\n        \"--plasma-typo-button1-fontStyle\": \"normal\",\n        \"--plasma-typo-button1-fontSize\": \"1rem\",\n        \"--plasma-typo-button1-letterSpacing\": \"normal\",\n        \"--plasma-typo-button1-lineHeight\": \"1.25rem\",\n        \"--plasma-typo-button2-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-button2-fontWeight\": 600,\n        \"--plasma-typo-button2-fontStyle\": \"normal\",\n        \"--plasma-typo-button2-fontSize\": \"0.875rem\",\n        \"--plasma-typo-button2-letterSpacing\": \"normal\",\n        \"--plasma-typo-button2-lineHeight\": \"1rem\",\n        \"--plasma-typo-caption-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-caption-fontWeight\": 500,\n        \"--plasma-typo-caption-fontStyle\": \"normal\",\n        \"--plasma-typo-caption-fontSize\": \"0.75rem\",\n        \"--plasma-typo-caption-letterSpacing\": \"-0.0220em\",\n        \"--plasma-typo-caption-lineHeight\": \"1rem\",\n        \"--plasma-typo-underline-fontFamily\": \"\\\"SB Sans Text\\\",sans-serif\",\n        \"--plasma-typo-underline-fontWeight\": 500,\n        \"--plasma-typo-underline-fontStyle\": \"normal\",\n        \"--plasma-typo-underline-fontSize\": \"0.625rem\",\n        \"--plasma-typo-underline-letterSpacing\": \"0.0125em\",\n        \"--plasma-typo-underline-lineHeight\": \"0.75rem\"\n    }\n};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}